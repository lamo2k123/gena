/*
    This file was automatically generated.
    DO NOT MODIFY IT BY HAND
    Instead, modify the source.
*/
import { EndpointBuilder } from '@reduxjs/toolkit/dist/query/endpointDefinitions';
import { BaseQueryFn } from '@reduxjs/toolkit/dist/query/baseQueryTypes';

{{#if types}}
{{{types}}}

{{/if}}
export interface IParameters {
    {{~typePathParameters~}}
    {{~typeQueryParameters~}}
    {{~typeBodyParameters~}}
}

export const {{nameFunction}} = <TResponse extends {{typeResponse}}, TParams extends IParameters>(builder: EndpointBuilder<BaseQueryFn, string, string>) => {
    return builder.{{builderMethod}}<TResponse, TParams>({
        query: ({{#if isParameters}}params{{/if}}) => ({
            url   : `{{endpoint}}`,
            method: '{{method}}',
            params: {{paramsPayload}},
            body  : {{bodyPayload}}
        })
    });
};
